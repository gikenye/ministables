{
  "service": "Onramp Allocation API",
  "version": "1.0.0",
  "baseUrl": "{{base_url}}",
  "network": "Celo Mainnet",
  "description": "Allocates onramp deposits to user vault accounts after verifying on-chain transactions",
  "endpoints": [
    {
      "path": "/allocate",
      "method": "POST",
      "description": "Allocates an onramp deposit to a user's vault account",
      "request": {
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "asset": {
            "type": "string",
            "required": true,
            "enum": ["USDC", "cUSD", "USDT", "cKES"],
            "description": "Asset symbol"
          },
          "userAddress": {
            "type": "string",
            "required": true,
            "format": "ethereum address",
            "description": "User's wallet address (0x...)"
          },
          "amount": {
            "type": "string",
            "required": true,
            "format": "uint256",
            "description": "Amount in token's smallest unit (wei). Example: '1000000000000000' for 0.001 cUSD"
          },
          "txHash": {
            "type": "string",
            "required": true,
            "format": "transaction hash",
            "description": "Onramp transaction hash (0x...)"
          }
        }
      },
      "responses": {
        "200": {
          "description": "Allocation successful",
          "body": {
            "success": true,
            "depositId": "string",
            "shares": "string",
            "allocationTxHash": "string",
            "onrampTxHash": "string",
            "duration": "string"
          },
          "example": {
            "success": true,
            "depositId": "2",
            "shares": "1014301172345001",
            "allocationTxHash": "0xabc123...",
            "onrampTxHash": "0x34990c9...",
            "duration": "3421ms"
          }
        },
        "400": {
          "description": "Bad request - validation failed",
          "errors": [
            "Missing required fields: asset, userAddress, amount, txHash",
            "Invalid userAddress",
            "Invalid asset. Supported: USDC, cUSD, USDT, cKES",
            "Transaction not found",
            "Transaction failed on-chain",
            "No token transfer found in transaction",
            "Transfer not sent to vault",
            "Amount mismatch",
            "Vault has insufficient balance"
          ]
        },
        "409": {
          "description": "Conflict - transaction already processed",
          "body": {
            "error": "Transaction already processed"
          }
        },
        "500": {
          "description": "Internal server error",
          "body": {
            "error": "string"
          }
        }
      }
    },
    {
      "path": "/health",
      "method": "GET",
      "description": "Health check endpoint",
      "responses": {
        "200": {
          "body": {
            "status": "ok",
            "timestamp": "ISO 8601 string"
          }
        }
      }
    }
  ],
  "vaults": {
    "USDC": {
      "vault": "0xBEEf1612958A90F3553362c74Ccdf4c181512cf5",
      "asset": "0xcebA9300f2b948710d2653dD7B07f33A8B32118C",
      "decimals": 6
    },
    "cUSD": {
      "vault": "0x1077E075c879E8C95E7d0545b106B1448d035F37",
      "asset": "0x765de816845861e75a25fca122bb6898b8b1282a",
      "decimals": 18
    },
    "USDT": {
      "vault": "0x90FF972CC2d12Ba495C8aC0887d6E9FD25B032c4",
      "asset": "0x48065fbBE25f71C9282ddf5e1cD6D6A887483D5e",
      "decimals": 6
    },
    "cKES": {
      "vault": "0xfC0a866533ee4B329Cf3843876067C89b5B08479",
      "asset": "0x456a3D042C0DbD3db53D5489e98dFb038553B0d0",
      "decimals": 18
    }
  },
  "security": {
    "txHashTracking": "Prevents duplicate allocations using on-chain transaction hash",
    "balanceVerification": "Verifies vault has sufficient balance before minting shares",
    "onChainValidation": "Validates transaction exists, succeeded, and transferred correct amount to correct vault"
  },
  "integration": {
    "workflow": [
      "User completes onramp transaction sending tokens to vault",
      "Onramp provider receives transaction hash",
      "Provider calls POST /allocate with transaction details",
      "API verifies transaction on-chain",
      "API allocates deposit to user's vault account",
      "User receives shares representing their deposit"
    ],
    "example": {
      "curl": "curl -X POST {{base_url}}/allocate -H 'Content-Type: application/json' -d '{\"asset\":\"cUSD\",\"userAddress\":\"0x03B81047FA48a2D164432d377c9e6fb532FF4F7E\",\"amount\":\"1000000000000000\",\"txHash\":\"0x34990c9231585aeed18ec8df8d5e59f1fd73e5fd65d69266302cee4c75dd1e2a\"}'"
    }
  }
}
